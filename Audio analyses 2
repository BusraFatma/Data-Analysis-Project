import librosa
import librosa.display
import matplotlib.pyplot as plt

def analyze_audio(file_path):
    # Ses dosyasını yükleyin
    y, sr = librosa.load(file_path)
    
    # Sesin süresini hesaplayın.
    duration = librosa.get_duration(y=y, sr=sr)

 # Ses dosyasını görselleştirin.
    plt.figure(figsize=(
    plt.figure(figsize=(
12, 4))
    librosa.display.waveshow(y, sr=sr)
    plt.title('Waveform')
    plt.xlabel('Time (seconds)')
    plt.ylabel('Amplitude')
    plt.show()

  return {
        "sample_rate": sr,
        "duration_seconds": duration,
        "file_path": file_path
    }

# Örnek dosya yolu.
file_path = 'path_to_your_audio_file.wav'
results = analyze_audio(file_path)
print(results)

import speech_recognition as sr
from textblob import TextBlob

def ses_dosyasini_metne_cevir(dosya_yolu):
    # Ses tanıma nesnesi oluştur
    r = sr.Recognizer()

 # Ses dosyasını aç
    with sr.AudioFile(dosya_yolu) as source:
        # Kaynaktan sesi al
        audio_data = r.record(source)

 # Ses verisini metne çevir
        try:
            text = r.recognize_google(audio_data, language='tr-TR')
            print("Metne Çevrilen Ses: " + text)
            return text
        except sr.UnknownValueError:
            print("Google Speech Recognition could not understand audio")
        except sr.RequestError as e:
            print("Could not request results from Google Speech Recognition service; {0}".format(e))

def duygu_analizi_yap(text):
    # Metni TextBlob objesine dönüştür
    analysis = TextBlob(text)
    # Duygu analizi yap
    if analysis.sentiment.polarity > 0:
        return 'Pozitif'
    elif analysis.sentiment.polarity == 0:
        return 'Nötr'
    else:
        return 'Negatif'

# Örnek bir ses dosyası yolu
dosya_yolu = 'ornek_ses_dosyasi.wav'

# Ses dosyasını metne çevir
metin = ses_dosyasini_metne_cevir(dosya_yolu)
